# ================================================================================================ #
# **************** CONEXION ORACLE ******************
# Oracle/OCI 11g or higher recommended
#
# Requires Ruby/OCI8:
#  https://github.com/kubo/ruby-oci8
#
# Specify your database using any valid connection syntax, such as a
# tnsnames.ora service name, or an SQL connect string of the form:
#
#   //host:[port][/service name]
#
# By default prefetch_rows (OCI_ATTR_PREFETCH_ROWS) is set to 100. And
# until true bind variables are supported, cursor_sharing is set by default
# to 'similar'. Both can be changed in the configuration below; the defaults
# are equivalent to specifying:
#
#  prefetch_rows: 100
#  cursor_sharing: similar
#
# default: &default
#   adapter: oracle_enhanced
#   pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
#   username: POS
#   password: d9M5NT6TaV2s
#
# development:
#   <<: *default
#   database: //100.10.10.76/desamt
#
#
# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
# test:
#   <<: *default
#   database: //100.10.10.76/desamt
#
# production:
#   <<: *default
#   database: //100.10.10.76/desamt
#   username: POS
#   password: d9M5NT6TaV2s

# ================================================================================================ #
# **************** CONEXION POSTGRESQL ******************
# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On macOS with MacPorts:
#   gem install pg -- --with-pg-config=/opt/local/lib/postgresql84/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem 'pg'
#
default: &default
  adapter: postgresql
  encoding: unicode
  username: postgres
  password: pgmt
  host: localhost
  port: 5432
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  <<: *default
  database: coremt_development

  # The specified database role being used to connect to postgres.
  # To create additional roles in postgres see `$ createuser --help`.
  # When left blank, postgres will use the default role. This is
  # the same name as the operating system user that initialized the database.
  #username: core_rails

  # The password associated with the postgres role (username).
  #password:

  # Connect on a TCP socket. Omitted by default since the client uses a
  # domain socket that doesn't need configuration. Windows does not have
  # domain sockets, so uncomment these lines.
  #host: localhost

  # The TCP port the server listens on. Defaults to 5432.
  # If your server runs on a different port number, change accordingly.
  #port: 5432

  # Schema search path. The server defaults to $user,public
  #schema_search_path: myapp,sharedapp,public

  # Minimum log levels, in increasing order:
  #   debug5, debug4, debug3, debug2, debug1,
  #   log, notice, warning, error, fatal, and panic
  # Defaults to warning.
  #min_messages: notice

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: coremt_test

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password as a unix environment variable when you boot
# the app. Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full rundown on how to provide these environment variables in a
# production deployment.
#
# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%= ENV['DATABASE_URL'] %>
#
production:
  <<: *default
  database: coremt_production
  username: coremt_dinamics
  password: <%= ENV['COREMT_DATABASE_PASSWORD'] %>

# **************** CONEXION ORACLE - CONSULTA DATOS ******************
# Conexión a la base de datos Oracle - Interno
oracle_development:
  adapter: oracle_enhanced
  database: desamt
  username: jreyes
  password: jreyes
  host: 100.10.10.76
  port: 1521
  service_name: desamt

# Conexión a la base de datos Oracle - Externo
oracle_cloud_development:
  adapter: oracle_enhanced
  database: (DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=tcp)(HOST=150.136.153.119)(PORT=1521)))(CONNECT_DATA=(SID=desamt)))
  username: jreyes # SIG
  password: jreyes # hn89-cPx
